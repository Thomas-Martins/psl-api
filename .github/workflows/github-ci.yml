name: Backend CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  pull_request_target:
    types:
      - closed

jobs:
  rebase-check:
    name: Rebase Check
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set target branch variable
        run: echo "TARGET_BRANCH=${{ github.base_ref }}" >> $GITHUB_ENV
      - name: Check if branch is rebased on target branch
        run: |
          git fetch origin $TARGET_BRANCH
          if [ "$(git merge-base HEAD origin/$TARGET_BRANCH)" != "$(git rev-parse origin/$TARGET_BRANCH)" ]; then
            echo "The branch is not rebased on $TARGET_BRANCH."
            exit 1
          fi

  tests:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && success()) ||
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')) ||
      (github.event_name == 'pull_request_target' && github.event.pull_request.merged == true)
    needs: [ rebase-check ]
    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - uses: actions/checkout@v4
      - name: Setup environment for testing
        run: cp .env.testing-ci .env
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite
      - name: Generate Passport keys
        run: php artisan passport:keys --force
      - name: Execute tests (Unit and Feature tests) via PHPUnit/Pest
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
        run: php artisan test

  notify_discord:
    name: Notify Discord
    runs-on: ubuntu-latest
    needs: [ tests ]
    if: github.event_name == 'pull_request_target' && github.event.pull_request.merged == true || github.event_name == 'pull_request'
    steps:
      - name: Define message
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          DISCORD_CHANNEL_ID: ${{ secrets.DISCORD_CHANNEL_ID }}
          AUTHOR: ${{ github.actor }}
          BRANCH: ${{ github.head_ref || github.ref_name }}
          STATUS: ${{ needs.tests.result }}
          TARGET_BRANCH: ${{ github.base_ref }}
        run: |
          MESSAGE=""

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            if [[ "$STATUS" == "success" ]]; then
              MESSAGE="‚úÖ **La PR de $BRANCH vers $TARGET_BRANCH est pr√™te √† √™tre merg√©e !** üéâ"
            else
              MESSAGE="‚ùå **La PR de $BRANCH vers $TARGET_BRANCH n'est PAS pr√™te √† √™tre merg√©e.** üö®"
            fi
          elif [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            MESSAGE="üöÄ **D√©ploiement r√©ussi du backend sur $TARGET_BRANCH par $AUTHOR !** üéâ"
          fi

          curl -H "Authorization: Bot $DISCORD_BOT_TOKEN" \
          -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\": \"$MESSAGE\"}" \
          https://discord.com/api/v9/channels/$DISCORD_CHANNEL_ID/messages

